BEGIN;

/* Выборка №1 
1.	Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ.
Вывести атрибуты: Н_ЛЮДИ.ОТЧЕСТВО, Н_ВЕДОМОСТИ.ИД.
Фильтры (AND):
a) Н_ЛЮДИ.ФАМИЛИЯ < Афанасьев.
b) Н_ВЕДОМОСТИ.ИД < 1490007.
c) Н_ВЕДОМОСТИ.ИД < 1490007.
Вид соединения: INNER JOIN.

*/

SELECT 
	Н_ЛЮДИ.ОТЧЕСТВО AS second_name, 
	Н_ВЕДОМОСТИ.ИД as document_id
FROM 
	Н_ЛЮДИ INNER JOIN Н_ВЕДОМОСТИ ON Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД 
WHERE 
	Н_ЛЮДИ.ФАМИЛИЯ < 'Афанасьев' 
	AND Н_ВЕДОМОСТИ.ИД < 1490007;

/* Выборка №2 
2.	Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ, Н_СЕССИЯ.
Вывести атрибуты: Н_ЛЮДИ.ОТЧЕСТВО, Н_ВЕДОМОСТИ.ИД, Н_СЕССИЯ.ДАТА.
Фильтры (AND):
a) Н_ЛЮДИ.ОТЧЕСТВО = Георгиевич.
b) Н_ВЕДОМОСТИ.ЧЛВК_ИД > 117219.
Вид соединения: LEFT JOIN.

1.0.1 Хотят чтобы для каждого из студентов были выведены отчество, номер ведомости и дата сессии соответствующие условию(при этом если студент не участвовал в экзаменах информация о нем все еще выводится). 
*/

SELECT 
	Н_ЛЮДИ.ОТЧЕСТВО AS second_name,
	Н_ВЕДОМОСТИ.ИД AS document_id,
	Н_СЕССИЯ.ДАТА AS date_of_exam
FROM 
	Н_ВЕДОМОСТИ LEFT JOIN (Н_ЛЮДИ LEFT JOIN Н_СЕССИЯ ON Н_ЛЮДИ.ИД = Н_СЕССИЯ.ЧЛВК_ИД) ON Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД 
WHERE 
	Н_ЛЮДИ.ОТЧЕСТВО = 'Георгиевич' 
	AND Н_ВЕДОМОСТИ.ЧЛВК_ИД > 117219;

/* Выборка №3 
3.	Вывести число названий дисциплин без учета повторений.
При составлении запроса нельзя использовать DISTINCT.

*/

SELECT 
	COUNT(*) -- 1.0.1 Изменено с COUNT(tmp.НАИМЕНОВАНИЕ)
FROM 
	(SELECT
		Н_ДИСЦИПЛИНЫ.НАИМЕНОВАНИЕ
	FROM 
		Н_ДИСЦИПЛИНЫ 
	GROUP BY 
		Н_ДИСЦИПЛИНЫ.НАИМЕНОВАНИЕ
	) AS tmp;

/* Вариант с агрегатной функцией в подзапросе */

SELECT COUNT(*) -- 1.0.1 Изменено с COUNT(tmp.cnt)
FROM(SELECT COUNT(Н_ДИСЦИПЛИНЫ.НАИМЕНОВАНИЕ) as cnt
     FROM Н_ДИСЦИПЛИНЫ
     GROUP BY Н_ДИСЦИПЛИНЫ.НАИМЕНОВАНИЕ) as tmp;

/* Выборка №4 
4.	Найти группы, в которых в 2011 году было более 5 обучающихся студентов на ФКТИУ.
Для реализации использовать подзапрос.

*/

SELECT 
	Н_УЧЕНИКИ.ГРУППА AS group, COUNT(ЧЛВК_ИД) -- 1.0.1 Добавлен COUNT для проверки верности условия
FROM 
	Н_УЧЕНИКИ 
WHERE 
	Н_УЧЕНИКИ.НАЧАЛО <= '12-12-2011' AND Н_УЧЕНИКИ.КОНЕЦ >= '01-01-2011' -- фильтрация по времени обучения(обучался в 2011 году)
	AND Н_УЧЕНИКИ.ПЛАН_ИД IN (											 -- фильтрация по факультету обучения
		SELECT Н_ПЛАНЫ.ИД												 
        FROM Н_ПЛАНЫ JOIN Н_ОТДЕЛЫ ON Н_ПЛАНЫ.ОТД_ИД = Н_ОТДЕЛЫ.ИД		 -- выборка всех таких ID планов, из объединения планов и отделов, что короткое имя отдела - КТиУ.
        WHERE 
            Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ'
		)
GROUP BY 
	Н_УЧЕНИКИ.ГРУППА -- ученики группируются по группам обучения, чтобы в дальнейшем применить фильтрацию(больше 5 обучающихся на ФКТиУ) по каждой из групп.
HAVING
	COUNT(ЧЛВК_ИД) > 5;
					
					
	

/* Выборка №5 
5.	Выведите таблицу со средними оценками студентов группы 4100 (Номер, ФИО, Ср_оценка), у которых средняя оценка не больше максимальной оценк(е|и) в группе 1101.
*/
WITH max_value_from_group_1101_table AS (SELECT MAX(CAST(Н_ВЕДОМОСТИ.ОЦЕНКА AS INTEGER)) AS max_value_from_group_1101 
            FROM Н_ВЕДОМОСТИ JOIN Н_УЧЕНИКИ ON Н_ВЕДОМОСТИ.ЧЛВК_ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
            WHERE 																								-- выборка максимальной оценки в группе 1101
                Н_УЧЕНИКИ.ГРУППА = '1101' 																		-- фильтрация по группе
                AND Н_ВЕДОМОСТИ.ОЦЕНКА IN ('1', '2', '3', '4', '5')												-- фильтрация оценок по численно-измеримым
        )
	

SELECT 
    Н_УЧЕНИКИ.ЧЛВК_ИД AS isu_id, 
    Н_ЛЮДИ.ФАМИЛИЯ AS last_name, 
    Н_ЛЮДИ.ИМЯ AS first_name, 
    Н_ЛЮДИ.ОТЧЕСТВО AS second_name, 
    AVG(CAST(Н_ВЕДОМОСТИ.ОЦЕНКА AS INTEGER)) AS avg_score		   -- средняя оценка учащегося
FROM 
    (Н_ВЕДОМОСТИ JOIN Н_УЧЕНИКИ ON Н_ВЕДОМОСТИ.ЧЛВК_ИД = Н_УЧЕНИКИ.ЧЛВК_ИД) JOIN Н_ЛЮДИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД 
WHERE 
    Н_УЧЕНИКИ.ГРУППА = '4100' 									   -- фильтрация по группе
    AND Н_ВЕДОМОСТИ.ОЦЕНКА IN ('1', '2', '3', '4', '5')			   -- фильтрация оценок по численно-измеримым
GROUP BY 
    Н_УЧЕНИКИ.ЧЛВК_ИД, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО -- группировка для нахождения среднего балла учащегося
HAVING 
    AVG(CAST(Н_ВЕДОМОСТИ.ОЦЕНКА AS INTEGER)) <= (SELECT max_value_from_group_1101 FROM max_value_from_group_1101_table); -- фильтрация, после которой остаются лишь учащиеся со средним баллом меньшим максимальной оценки в группе 1101 UPD 1.0.1 Изменено в соответствии с правками (исправлен затуп)

/* Выборка №6 
6.	Получить список студентов, зачисленных после первого сентября 2012 года на первый курс заочной формы обучения (специальность: 230101). В результат включить:
номер группы;
номер, фамилию, имя и отчество студента;
номер и состояние пункта приказа;
Для реализации использовать подзапрос с IN.

*/

SELECT 
	Н_УЧЕНИКИ.ГРУППА AS group,
	Н_УЧЕНИКИ.ЧЛВК_ИД AS isu_id, 
    Н_ЛЮДИ.ФАМИЛИЯ AS last_name, 
    Н_ЛЮДИ.ИМЯ AS first_name, 
    Н_ЛЮДИ.ОТЧЕСТВО AS second_name, 
	Н_УЧЕНИКИ.П_ПРКОК_ИД AS admission_order_item,
	Н_УЧЕНИКИ.ПРИЗНАК AS current_state_in_learning
FROM 
	(Н_УЧЕНИКИ JOIN Н_ЛЮДИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД) JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД 
WHERE
	Н_УЧЕНИКИ.НАЧАЛО > '01-09-2012'																   -- Проверка на то что студент поступил после 1 сентября 2012 года
	AND Н_ПЛАНЫ.КУРС = 1																		   -- Проверка на то что студент поступил на 1 курс обучения
	AND Н_УЧЕНИКИ.СОСТОЯНИЕ = 'утвержден'														   -- Проверка что приказ был утвержден
	AND Н_ПЛАНЫ.ФО_ИД IN (SELECT ИД FROM Н_ФОРМЫ_ОБУЧЕНИЯ WHERE НАИМЕНОВАНИЕ = 'Заочная')		   -- Проверка на то что студент поступил на заочную форму обучения
	AND Н_ПЛАНЫ.НАПС_ИД IN (SELECT Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.ИД
		FROM
			Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ JOIN Н_НАПР_СПЕЦ ON Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.НС_ИД = Н_НАПР_СПЕЦ.ИД -- Проверка что студент поступил на специальность 230101
		WHERE 
			Н_НАПР_СПЕЦ.КОД_НАПРСПЕЦ = '230101');

/* Выборка №7 
7.	Сформировать запрос для получения числа в группе No 3100 троечников.
*/

WITH bad_studs_table AS (SELECT Н_УЧЕНИКИ.ЧЛВК_ИД FROM Н_УЧЕНИКИ JOIN Н_ВЕДОМОСТИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД -- выборка студентов из группы 3100 со средним баллом ниже 3.5 (т.е. студентов-троечников)
WHERE 
	Н_УЧЕНИКИ.ГРУППА = '3100' 
	AND Н_ВЕДОМОСТИ.ОЦЕНКА IN ('1', '2', '3', '4', '5')
GROUP BY Н_УЧЕНИКИ.ЧЛВК_ИД -- группировка по ID человека, чтобы в последствии отфильтровать по среднему баллу
HAVING
	AVG(CAST(Н_ВЕДОМОСТИ.ОЦЕНКА AS INTEGER)) < 3.5) -- вычисление среднего балла каждого из студентов, и фильтрация тех чей балл выше или равен 3.5

SELECT COUNT(ЧЛВК_ИД) AS bad_studs_amount
FROM bad_studs_table;

END;